# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      USE_APPROVALS: 
        description: "Enable approvals?"
        required: true
        type: choice
        options:
          - 'true'
          - 'false'
      ENVIRONMENT:
        description: "Environment"
        required: true
        default: 'dev'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Initialization step
  initialize:
    name: Initialize Workflow
    runs-on: ubuntu-latest
    environment: ${{inputs.ENVIRONMENT || 'dev'}}
    outputs:
      component_id: ${{steps.init.outputs.META_COMPONENT}}
      
    steps:
      - uses: actions/checkout@v3
        id: init
      - shell: bash
        run: |
          echo "Initialize Workflow: ${{ github.event.inputs.ENVIRONMENT }}:denv:${{inputs.ENVIRONMENT}}"
          if [ "${{ inputs.ENVIRONMENT }}" == "production" ]; then
            echo "The production: ${{secrets.AWS_ACCOUNT_ID=='1234'}}";
          elif [ "${{ inputs.ENVIRONMENT }}" == "dev" ]; then
            echo "The dev: ${{secrets.AWS_ACCOUNT_ID=='4321'}}";
          fi
          cat meta.json|jq -r 'to_entries|map("META_\(.key|ascii_upcase)=\(.value)")|.[]' >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
          cat meta.json|jq -r 'to_entries|map("META_\(.key|ascii_upcase)=\(.value)")|.[]' >> $GITHUB_STEP_SUMMARY

  # Approval job
  approval:
    name: Approve Workflow Deployment
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.USE_APPROVALS == 'true' }}
    environment: approval-environment
    steps:
      - name: Approve Workflow Deployment
        run: echo "Approved Workflow Deployment"
        shell: bash

  # Build job
  build:
    name: Build and Set Environment Variables
    runs-on: ubuntu-latest
    needs: [approval, initialize]
    if: ${{ success() && !cancelled() }}
    outputs:
      DD_ENV: ${{ env.DD_ENV }}
    steps:
      - name: Run a one-line script
        run: echo "Hello, world!"\
             echo "${{needs.initialize.outputs.component_id}}"

      - name: Run a multi-line script
        run: |
          echo "Add other actions to build,"
          echo "test, and deploy your project. Approval result: ${{ needs.approval.result }}"

  # Notification job
  notify:
    name: Notify Workflow
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Notify with environment details
        run: echo "Notify Workflow:${{ needs.build.outputs.DD_ENV }}"
        shell: bash
